例如，假设名称服务器正在处理针对USCISIC.ARPA的查询，询问A类型信息，并有下述资源记录：
USC-ISIC.ARPA IN CNAME C.ISI.EDU
C.ISI.EDU IN A 10.0.0.52
这两个RRs将在对A类型查询的响应中返回，而CANME类型或*查询应当仅返回CNAME。
在RRs中的域名(这些域名指向另一个名称)应当总是指向主(正则)名称，而不是指向别名。这可以避免访问信息中的额外迂回。例如，对于上面的主机，到名称RR的地址应当是：
52.0.0.10.IN-ADDR.ARPA IN PTR C.ISI.EDUf

递归模式的使用限定在一些场景，在那里，客户端和名称服务器一致同意使用递归模式。在查询消息和响应消息中，通过两个位的使用，对是否同意可以协商：
- RA位，由名称服务器在所有响应中置1，递归可以使用；或置0，递归不可以使用。如果名称服务器愿意为该客户端提供递归业务，此位为真，无论是否该客户端请求了递归业务。即，RA暗示可用性而不是使用。
- 查询包括称作希望递归(recursion desired)或RD的位。此位规定是否请求者希望这个查询使用递归业务。客户端可以请求来自任何名称服务器的递归业务，尽管客户端们应当仅相信从下述服务器接收的递归业务，这些服务器先前已经发送了RA，或者这些服务器已经同意通过私有协定或某些DNS协议以外的其他方法提供业务。
当带有RD置1的查询到达服务器(该服务器愿意提供递归业务)时，递归模式发生；通过检验在此响应中RA和RD都被置1，客户端可以证实使用了递归模式。注意，除非经RD要求，名称服务器绝不应执行递归业务，因为这会干扰名称服务器和它们的数据库的故障排查。
如果要求递归业务并且可以使用，查询的递归响应将是下列之一：
- 对查询的回答，可能由一个或多个CNAME RRs开始，这些CNAME RRs规定在到达回答的路径上遇到的别名。
- 指出名称不存在的名称错误。它可能包括CNAME RRs，这些CNAME RRs指出起源的查询名称是不存在的名称的别名。
- 临时错误指示。
如果没有要求递归业务，或者不能获得递归业务，非递归响应将是下列之一：
- 权威名称错误，它指出该名称不存在。
- 临时错误指示。
- 下述的某个组合：
回答问题的RRs，连同是否数据来自区域或被缓存的指示。
到这样的名称服务器们的转介，与发送该响应的服务器相比，这些名称服务器有更接近于到该名称的祖宗们的区域。
- 名称服务器认为这些RRs将对请求者有用。


5-3-3 算法
顶层算法分为4个步骤：
1、看看回答是否在本地信息中，如果是，将该回答返回给客户端。
2、发现将要向其询问的最好的服务器们。
3、向这些服务器发送查询，直到它们中的一个返回响应。
4、分析该响应，或者：
a、如果该响应回答了问题或者包含名称错误，缓存数据并将该响应返回给客户端。
b、如果该响应包含对其他服务器的更好授权，缓存授权信息，转到步骤2。
c、如果该响应显示CNAME，并且CNAME不是回答本身，缓存CNAME，改变SNAME到CNAME RR中的正则名称，转到步骤1。
d、如果该响应显示服务器故障或其它异常内容，从SLIST中删除该服务器，并转到步骤3。
步骤1为想要的数据搜索缓存器。如果缓存器中存有该数据，假设该数据对于正常使用足够好。某些解析器在用户接口中设有选择，该选择强制解析器忽略缓存的数据并咨询权威服务器。此做法没有作为默认推荐。如果解析器已经直接访问到名称服务器的区域，解析器应当查看是否想要的数据以权威格式存在，如果存在，使用权威数据优先于缓存的数据。
步骤2查找名称服务器，索求数据。一般策略是查找本地可用名称服务器RRs，以SNAME开始，接着是SNAME的父域名称，祖父，一直继续到根。于是，如果SNAME是Mockapetris.ISI.EDU，这一步骤将查找Mockapetris.ISI.EDU的NS RRs，接着是ISI.EDU，接
着是EDU，接着是…，(根)。
这些NS RRs为在SNAME中或在SNAME上的区域列出主机们的名称。复制这些名称到SLIST。使用本地数据设置它们的地址。可能出现地址不能得到情况。这里，解析器有多种选择：最好的选择是，当用可获得的地址继续向前时，开始采用并行解析器进程查找地址。很明显，设计选择和选项是复杂的，是随本地主机能力而变的。向解析器设计者推荐的优先次序是：
1、限制任务(分组发送，开始的并行进程)数量，以便请求不会陷入无限循环，或引起采用其它实现的请求或查询的连锁反应，即使某个实现已经不正确地配置了某个数据。
2、如果有可能，返回回答。
3、避免不必要的传递。
4、尽可能迅速地得到回答。
如果搜索NS RRs失败，那么，解析器根据安全带SBELT初始化SLIST。基本思路是，当解析器对应该问哪个服务器没有主意时，解析器应当使用来自配置文件的信息，该配置文件列出了几个预期是有帮助的服务器。虽然有一些特殊情况，通常的选择是根服务器中的两个和主机域的服务器中的两个。每种情况两个的原因是考虑冗余。根服务器将提供对所有域空间的最终访问。如果由于网关或链路故障，使得本地网络脱离互连网络，两个本地服务器将使解析器能够继续解析本地名称。
除了服务器的名称和地址以外，可以分类SLIST数据结构，以便首先使用最好的服务器，并确保以循环的方式使用所有服务器的所有地址。此分类可以是本地网络上(相比其他地址的)优先地址的简单函数，或者可以包括来自过去事件的统计量，诸如先前的响应时间和平均成功率。
步骤3送出查询，直到收到响应。策略是利用每次发送间的超时，围绕所有服务器的所有地址循环。实践中，重要的是使用多归属地主机的所有地址，当响应由多个竞争相同名称服务器的解析器(即使偶尔由单个解析器)使用时，过于激进的重传策略实际上延缓响应。SLIST一般包括控制超时的数据值，以及保持跟踪先前传输的数据值。
步骤4涉及分析响应。解析器在它的响应分析中应当保持高度质疑。解析器也应当使用响应中的ID字段验证响应匹配它发出的查询。理想的回答是来自该查询的服务器权威的回答，该回答或者给出请求的数据，或者给出名称错误。如果数据的TTL远大于0，数据被传回用户，并被输进缓存以备将来使用。
如果响应显示授权，解析器应当验证该授权比在SLIST中的服务器们“更接近于”回答。通过将SLIST中的匹配计数与根据该授权中的SNAME和NS RRs计算出的计数比较，可做到此。如果不是“更接近于”回答，该响应是虚假的，应当忽略。如果授权合法，应当缓存NS授权RRs和服务器们的任何地址RRs。将该名称服务器输入进SLIST，搜索重新开始。
如果响应包括CNAME，搜索在此CNAME重新开始，除非该响应有正则名称数据，或如果CNAME是回答本身。


SOA

源主机（Primary nameserver）：

DNS记录文件所在的主机位置。

联系邮箱（Hostmaster E-mail address）：

记录主机管理员的联系方式，其中第一个点表示的是@。

序列号（Serial）：

格式为yyyymmddnn，nn代表这一天是第几次修改。辅名字服务器通过比较这个序列号是否加载一份新的区数据拷贝。

refresh（刷新）：

告诉该区的辅名字服务器相隔多久检查该区的数据是否是最新的。

retry（重试）：

如果辅名字服务器超过刷新间隔时间后无法访问主服务器，那么它就开始隔一段时间重试连接一次。这个时间通常比刷新时间短，但也不一定非要这样。

expire（过期或期满）：

如果在期满时间内辅名字服务器还不能和主服务器连接上，辅名字服务器就使用这个我失效。这就意味着辅名字服务器将停止关于该区的回答，因为这些区数据太旧了，没有用了。设置时间要比刷新和重试时间长很多，以周为单位是较合理的。

否定缓存TTL（生存期）：

这个值对来自这个区的权威名字服务器的否定响应都适用。
